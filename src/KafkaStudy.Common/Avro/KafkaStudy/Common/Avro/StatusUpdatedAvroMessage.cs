// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.10.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace KafkaStudy.Common.Avro
{

    using global::Avro;
    using global::Avro.Specific;

    /// <summary>
    /// Schema de atualização de status das mensagens
    /// </summary>
    public partial class StatusUpdatedAvroMessage : ISpecificRecord
    {
        public static Schema _SCHEMA = Schema.Parse("{\"type\":\"record\",\"name\":\"StatusUpdatedAvroMessage\",\"namespace\":\"KafkaStudy.Common" +
                ".Avro\",\"fields\":[{\"name\":\"Id\",\"doc\":\"Id da mensagem\",\"type\":\"string\"},{\"name\":\"S" +
                "tatus\",\"doc\":\"Status da mensagem\",\"type\":\"string\"}]}");
        /// <summary>
        /// Id da mensagem
        /// </summary>
        private string _Id;
        /// <summary>
        /// Status da mensagem
        /// </summary>
        private string _Status;
        public virtual Schema Schema
        {
            get
            {
                return StatusUpdatedAvroMessage._SCHEMA;
            }
        }
        /// <summary>
        /// Id da mensagem
        /// </summary>
        public string Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this._Id = value;
            }
        }
        /// <summary>
        /// Status da mensagem
        /// </summary>
        public string Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                this._Status = value;
            }
        }
        public virtual object Get(int fieldPos)
        {
            switch (fieldPos)
            {
                case 0: return this.Id;
                case 1: return this.Status;
                default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
            };
        }
        public virtual void Put(int fieldPos, object fieldValue)
        {
            switch (fieldPos)
            {
                case 0: this.Id = (System.String)fieldValue; break;
                case 1: this.Status = (System.String)fieldValue; break;
                default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
            };
        }
    }
}
